name: Node.js CI/CD Pipeline

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master ]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

  lint:
    name: Lint
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Restore node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
      
      - name: Install dependencies if cache miss
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install
      
      - name: Lint code
        run: npm run lint

  unit-tests:
    name: Unit Tests
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Restore node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
      
      - name: Install dependencies if cache miss
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install
      
      - name: Run unit tests
        run: npm run test:unit
        env:
          NODE_ENV: test
          TEST_DB_USERNAME: ${{ secrets.TEST_DB_USERNAME }}
          TEST_DB_DATABASE: ${{ secrets.TEST_DB_DATABASE }}
          TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
          TEST_DB_DIALECT: ${{ secrets.TEST_DB_DIALECT }}